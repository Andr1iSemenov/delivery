/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.3.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package app.delivery.api.adapters.contract.openapi.api;

import app.delivery.api.adapters.contract.openapi.model.Courier;
import app.delivery.api.adapters.contract.openapi.model.Error;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
@Validated
@Tag(name = "Couriers", description = "the Couriers API")
public interface CouriersApi {

    /**
     * GET /api/v1/couriers/ : Получить всех курьеров
     * Позволяет получить всех курьеров
     *
     * @return Успешный ответ (status code 200)
     *         or Ошибка (status code 200)
     */
    @Operation(
        operationId = "getCouriers",
        summary = "Получить всех курьеров",
        description = "Позволяет получить всех курьеров",
        tags = { "Couriers" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Успешный ответ", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = Courier.class)))
            }),
            @ApiResponse(responseCode = "default", description = "Ошибка", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/api/v1/couriers/",
        produces = { "application/json" }
    )
    
    ResponseEntity<List<Courier>> getCouriers(
        
    );

}
